D G "__PCM__" 0 25 ""5.101""
D G "__DEVICE__" 0 25 "629"
D G "__DATE__" 0 25 ""28-Aug-22""
D G "__TIME__" 0 25 ""00:01:02""
D G "_UNICODE" 0 25 ""?""
D G "__EVAL" 0 25 ""?"" "Standard Header file for the PIC12F629 device ////////////////"
c L "set_tris_a" 2 3 6 "FUNCTION"
F N "set_tris_a" 2 37 ""
V L "value" 2 37 "int8" `54 
F B "set_tris_a" 2 37 "void(int8 value)" `53 
F N "get_tris_a" 2 38 ""
F B "get_tris_a" 2 38 "int8()" `55 
F N "output_a" 2 39 ""
V L "value" 2 39 "int8" `57 
F B "output_a" 2 39 "void(int8 value)" `56 
F N "input_a" 2 40 ""
F B "input_a" 2 40 "int8()" `58 
F N "input_change_a" 2 41 ""
F B "input_change_a" 2 41 "int8()" `59 
F N "port_a_pullups" 2 42 ""
V L "value" 2 42 "int8" `61 
F B "port_a_pullups" 2 42 "void(int8 value)" `60 
F N "input" 2 43 ""
V L "pin" 2 43 "int16" `63 
F B "input" 2 43 "int8(int16 pin)" `62 
F N "input_state" 2 44 ""
V L "pin" 2 44 "int16" `65 
F B "input_state" 2 44 "int8(int16 pin)" `64 
F N "output_low" 2 45 ""
V L "pin" 2 45 "int16" `67 
F B "output_low" 2 45 "void(int16 pin)" `66 
F N "output_high" 2 46 ""
V L "pin" 2 46 "int16" `69 
F B "output_high" 2 46 "void(int16 pin)" `68 
F N "output_toggle" 2 47 ""
V L "pin" 2 47 "int16" `71 
F B "output_toggle" 2 47 "void(int16 pin)" `70 
F N "output_bit" 2 48 ""
V L "pin" 2 48 "int16" `73 
V L "level" 2 48 "int8" `74 
F B "output_bit" 2 48 "void(int16 pin,int8 level)" `72 
F N "output_float" 2 49 ""
V L "pin" 2 49 "int16" `76 
F B "output_float" 2 49 "void(int16 pin)" `75 
F N "output_drive" 2 50 ""
V L "pin" 2 50 "int16" `78 
F B "output_drive" 2 50 "void(int16 pin)" `77  "Constants used to identify pins in the above are:"
D G "PIN_A0" 2 54 "40"
D G "PIN_A1" 2 55 "41"
D G "PIN_A2" 2 56 "42"
D G "PIN_A3" 2 57 "43"
D G "PIN_A4" 2 58 "44"
D G "PIN_A5" 2 59 "45"
D G "FALSE" 2 62 "0"
D G "TRUE" 2 63 "1"
D G "BYTE" 2 65 "int8"
D G "BOOLEAN" 2 66 "int1"
D G "getc" 2 68 "getch"
D G "fgetc" 2 69 "getch"
D G "getchar" 2 70 "getch"
D G "putc" 2 71 "putchar"
D G "fputc" 2 72 "putchar"
D G "fgets" 2 73 "gets"
D G "fputs" 2 74 "puts"
c L "output_drive" 2 3 3 "FUNCTION"
F N "restart_cause" 2 79 ""
F B "restart_cause" 2 79 "int8()" `79 
F N "reset_cpu" 2 80 ""
F B "reset_cpu" 2 80 "void()" `80 
F N "sleep" 2 81 ""
F B "sleep" 2 81 "void()" `81  "Constants returned from RESTART_CAUSE() are:"
D G "WDT_FROM_SLEEP" 2 83 "3"
D G "WDT_TIMEOUT" 2 84 "11"
D G "MCLR_FROM_SLEEP" 2 85 "19"
D G "MCLR_FROM_RUN" 2 86 "27"
D G "NORMAL_POWER_UP" 2 87 "25"
D G "BROWNOUT_RESTART" 2 88 "26"
c L "sleep" 2 3 5 "FUNCTION"
F N "setup_timer_0" 2 95 ""
V L "mode" 2 95 "int8" `83 
F B "setup_timer_0" 2 95 "void(int8 mode)" `82 
F N "set_timer0" 2 96 ""
V L "value" 2 96 "int8" `85 
F B "set_timer0" 2 96 "void(int8 value)" `84 
F N "get_timer0" 2 97 ""
F B "get_timer0" 2 97 "int8()" `86 
F N "setup_counters" 2 98 ""
V L "mode" 2 98 "int8" `88 
V L "prescaler" 2 98 "int8" `89 
F B "setup_counters" 2 98 "void(int8 mode,int8 prescaler)" `87 
F N "set_rtcc" 2 99 ""
V L "value" 2 99 "int8" `91 
F B "set_rtcc" 2 99 "void(int8 value)" `90 
F N "get_rtcc" 2 100 ""
F B "get_rtcc" 2 100 "int8()" `92  "Constants used for SETUP_TIMER_0() are:"
D G "T0_INTERNAL" 2 102 "0"
D G "T0_EXT_L_TO_H" 2 103 "32"
D G "T0_EXT_H_TO_L" 2 104 "48"
D G "T0_DIV_1" 2 106 "8"
D G "T0_DIV_2" 2 107 "0"
D G "T0_DIV_4" 2 108 "1"
D G "T0_DIV_8" 2 109 "2"
D G "T0_DIV_16" 2 110 "3"
D G "T0_DIV_32" 2 111 "4"
D G "T0_DIV_64" 2 112 "5"
D G "T0_DIV_128" 2 113 "6"
D G "T0_DIV_256" 2 114 "7"
D G "T0_8_BIT" 2 117 "0"
D G "RTCC_INTERNAL" 2 121 "0"
D G "RTCC_EXT_L_TO_H" 2 122 "32"
D G "RTCC_EXT_H_TO_L" 2 123 "48"
D G "RTCC_DIV_1" 2 124 "8"
D G "RTCC_DIV_2" 2 125 "0"
D G "RTCC_DIV_4" 2 126 "1"
D G "RTCC_DIV_8" 2 127 "2"
D G "RTCC_DIV_16" 2 128 "3"
D G "RTCC_DIV_32" 2 129 "4"
D G "RTCC_DIV_64" 2 130 "5"
D G "RTCC_DIV_128" 2 131 "6"
D G "RTCC_DIV_256" 2 132 "7"
D G "RTCC_8_BIT" 2 133 "0"
c L "get_rtcc" 2 3 8 "FUNCTION"
F N "setup_wdt" 2 144 ""
V L "mode" 2 144 "int16" `94 
F B "setup_wdt" 2 144 "void(int16 mode)" `93 
F N "restart_wdt" 2 145 ""
F B "restart_wdt" 2 145 "void()" `95  "Constants used for SETUP_WDT() are:"
D G "WDT_18MS" 2 148 "8"
D G "WDT_36MS" 2 149 "9"
D G "WDT_72MS" 2 150 "10"
D G "WDT_144MS" 2 151 "11"
D G "WDT_288MS" 2 152 "12"
D G "WDT_576MS" 2 153 "13"
D G "WDT_1152MS" 2 154 "14"
D G "WDT_2304MS" 2 155 "15"
c L "restart_wdt" 2 3 3 "FUNCTION"
F N "setup_timer_1" 2 161 ""
V L "mode" 2 161 "int16" `97 
F B "setup_timer_1" 2 161 "void(int16 mode)" `96 
F N "get_timer1" 2 162 ""
F B "get_timer1" 2 162 "int16()" `98 
F N "set_timer1" 2 163 ""
V L "value" 2 163 "int16" `100 
F B "set_timer1" 2 163 "void(int16 value)" `99  "Constants used for SETUP_TIMER_1() are:"
D G "T1_DISABLED" 2 166 "0"
D G "T1_INTERNAL" 2 167 "5"
D G "T1_EXTERNAL" 2 168 "7"
D G "T1_EXTERNAL_SYNC" 2 169 "3"
D G "T1_CLK_OUT" 2 171 "8"
D G "T1_DIV_BY_1" 2 173 "0"
D G "T1_DIV_BY_2" 2 174 "0x10"
D G "T1_DIV_BY_4" 2 175 "0x20"
D G "T1_DIV_BY_8" 2 176 "0x30"
D G "T1_GATE" 2 178 "0x40"
D G "T1_GATE_INVERTED" 2 179 "0xC0"
c L "set_timer1" 2 3 3 "FUNCTION"
F N "setup_comparator" 2 184 ""
V L "mode" 2 184 "int32" `102 
F B "setup_comparator" 2 184 "void(int32 mode)" `101  "Constants used in setup_comparator() are:"
D G "NC_NC_NC_NC" 2 186 "0x0ff07"
D G "NC_NC" 2 187 "0x0ff07"
D G "A0_A1" 2 188 "0x3ff02"
D G "A1_VR_OUT_ON_A2" 2 189 "0x6fb03"
D G "A1_VR" 2 190 "0x2ff04"
D G "A0_A1_OUT_ON_A2" 2 191 "0x3fb01"
D G "COMP_INVERT" 2 194 "0x10"
c L "setup_comparator" 2 3 2 "FUNCTION"
F N "setup_vref" 2 200 ""
V L "mode" 2 200 "int8" `105 
F B "setup_vref" 2 200 "void(int8 mode)" `104  "Constants used in setup_vref() are:"
D G "VREF_LOW" 2 202 "0xa0"
D G "VREF_HIGH" 2 203 "0x80"
c L "setup_vref" 2 3 4 "FUNCTION"
F N "abs" 2 210 ""
V L "x" 2 210 "sint8" `107 
F B "abs" 2 210 "sint8(sint8 x)" `106 
F N "abs" 2 211 ""
V L "x" 2 211 "sint16" `109 
F B "abs" 2 211 "sint16(sint16 x)" `108 
F N "abs" 2 212 ""
V L "x" 2 212 "sint32" `111 
F B "abs" 2 212 "sint32(sint32 x)" `110 
F N "abs" 2 213 ""
V L "x" 2 213 "float" `113 
F B "abs" 2 213 "float(float x)" `112 
F N "_mul" 2 214 ""
V L "??65535" 2 214 "int8" `115 
V L "??65535" 2 214 "int8" `116 
F B "_mul" 2 214 "int16(int8 ,int8 )" `114 
F N "_mul" 2 215 ""
V L "??65535" 2 215 "sint8" `118 
V L "??65535" 2 215 "sint8" `119 
F B "_mul" 2 215 "sint16(sint8 ,sint8 )" `117 
F N "_mul" 2 216 ""
V L "??65535" 2 216 "int16" `121 
V L "??65535" 2 216 "int16" `122 
F B "_mul" 2 216 "int32(int16 ,int16 )" `120 
F N "_mul" 2 217 ""
V L "??65535" 2 217 "sint16" `124 
V L "??65535" 2 217 "sint16" `125 
F B "_mul" 2 217 "sint32(sint16 ,sint16 )" `123  "Memory Manipulation Prototypes:"
F N "read_bank" 2 220 ""
V L "bank" 2 220 "int8" `127 
V L "offset" 2 220 "int8" `128 
F B "read_bank" 2 220 "int8(int8 bank,int8 offset)" `126 
F N "write_bank" 2 221 ""
V L "bank" 2 221 "int8" `130 
V L "offset" 2 221 "int8" `131 
V L "value" 2 221 "int8" `132 
F B "write_bank" 2 221 "void(int8 bank,int8 offset,int8 value)" `129 
F N "strcpy" 2 222 ""
V L "dest" 2 222 "*int8" `134 
V L "src" 2 222 "*int8" `135 
F B "strcpy" 2 222 "void(*int8 dest,*int8 src)" `133 
F N "memset" 2 223 ""
V L "destination" 2 223 "*int8" `137 
V L "value" 2 223 "int8" `138 
V L "num" 2 223 "int16" `139 
F B "memset" 2 223 "void(*int8 destination,int8 value,int16 num)" `136 
F N "memcpy" 2 224 ""
V L "destination" 2 224 "*int8" `141 
V L "source" 2 224 "*int8" `142 
V L "num" 2 224 "int16" `143 
F B "memcpy" 2 224 "void(*int8 destination,*int8 source,int16 num)" `140  "String Prototypes:"
F N "toupper" 2 227 ""
V L "cvalue" 2 227 "int8" `145 
F B "toupper" 2 227 "int8(int8 cvalue)" `144 
F N "tolower" 2 228 ""
V L "cvalue" 2 228 "int8" `147 
F B "tolower" 2 228 "int8(int8 cvalue)" `146 
F N "sprintf" 2 229 ""
V L "string" 2 229 "*int8" `149 
V L "cstring" 2 229 "*int8" `150 
F B "sprintf" 2 229 "void(*int8 string,*int8 cstring,*int8 _VA_LIST)" `148  "Data Manipulators Prototypes:"
F N "shift_left" 2 232 ""
V L "address" 2 232 "*int8" `153 
V L "bytes" 2 232 "int8" `154 
V L "value" 2 232 "int8" `155 
F B "shift_left" 2 232 "int8(*int8 address,int8 bytes,int8 value)" `152 
F N "shift_right" 2 233 ""
V L "address" 2 233 "*int8" `157 
V L "bytes" 2 233 "int8" `158 
V L "value" 2 233 "int8" `159 
F B "shift_right" 2 233 "int8(*int8 address,int8 bytes,int8 value)" `156 
F N "rotate_left" 2 234 ""
V L "address" 2 234 "*int8" `161 
V L "bytes" 2 234 "int8" `162 
F B "rotate_left" 2 234 "void(*int8 address,int8 bytes)" `160 
F N "rotate_right" 2 235 ""
V L "address" 2 235 "*int8" `164 
V L "bytes" 2 235 "int8" `165 
F B "rotate_right" 2 235 "void(*int8 address,int8 bytes)" `163 
F N "swap" 2 236 ""
V L "value" 2 236 "int8" `167 
F B "swap" 2 236 "void(int8 value)" `166 
F N "make8" 2 237 ""
V L "var" 2 237 "int16" `169 
V L "offset" 2 237 "int8" `170 
F B "make8" 2 237 "int8(int16 var,int8 offset)" `168 
F N "make8" 2 238 ""
V L "var" 2 238 "int32" `172 
V L "offset" 2 238 "int8" `173 
F B "make8" 2 238 "int8(int32 var,int8 offset)" `171 
F N "make16" 2 239 ""
V L "varhigh" 2 239 "int8" `175 
V L "varlow" 2 239 "int8" `176 
F B "make16" 2 239 "int16(int8 varhigh,int8 varlow)" `174 
F N "make32" 2 240 ""
V L "var1" 2 240 "int16" `178 
F B "make32" 2 240 "int32(int16 var1)" `177 
F N "make32" 2 241 ""
V L "var1" 2 241 "int16" `180 
V L "var2" 2 241 "int16" `181 
F B "make32" 2 241 "int32(int16 var1,int16 var2)" `179 
F N "make32" 2 242 ""
V L "var1" 2 242 "int16" `183 
V L "var2" 2 242 "int8" `184 
F B "make32" 2 242 "int32(int16 var1,int8 var2)" `182 
F N "make32" 2 243 ""
V L "var1" 2 243 "int16" `186 
V L "var2" 2 243 "int8" `187 
V L "var3" 2 243 "int8" `188 
F B "make32" 2 243 "int32(int16 var1,int8 var2,int8 var3)" `185 
F N "make32" 2 244 ""
V L "var1" 2 244 "int8" `190 
F B "make32" 2 244 "int32(int8 var1)" `189 
F N "make32" 2 245 ""
V L "var1" 2 245 "int8" `192 
V L "var2" 2 245 "int8" `193 
F B "make32" 2 245 "int32(int8 var1,int8 var2)" `191 
F N "make32" 2 246 ""
V L "var1" 2 246 "int8" `195 
V L "var2" 2 246 "int8" `196 
V L "var3" 2 246 "int8" `197 
F B "make32" 2 246 "int32(int8 var1,int8 var2,int8 var3)" `194 
F N "make32" 2 247 ""
V L "var1" 2 247 "int8" `199 
V L "var2" 2 247 "int8" `200 
V L "var3" 2 247 "int8" `201 
V L "var4" 2 247 "int8" `202 
F B "make32" 2 247 "int32(int8 var1,int8 var2,int8 var3,int8 var4)" `198 
F N "make32" 2 248 ""
V L "var1" 2 248 "int8" `204 
V L "var2" 2 248 "int16" `205 
F B "make32" 2 248 "int32(int8 var1,int16 var2)" `203 
F N "make32" 2 249 ""
V L "var1" 2 249 "int8" `207 
V L "var2" 2 249 "int16" `208 
V L "var3" 2 249 "int8" `209 
F B "make32" 2 249 "int32(int8 var1,int16 var2,int8 var3)" `206 
F N "make32" 2 250 ""
V L "var1" 2 250 "int8" `211 
V L "var2" 2 250 "int8" `212 
V L "var3" 2 250 "int16" `213 
F B "make32" 2 250 "int32(int8 var1,int8 var2,int16 var3)" `210 
F N "bit_set" 2 251 ""
V L "var" 2 251 "int8" `215 
V L "bit" 2 251 "int8" `216 
F B "bit_set" 2 251 "void(int8 var,int8 bit)" `214 
F N "bit_set" 2 252 ""
V L "var" 2 252 "int16" `218 
V L "bit" 2 252 "int8" `219 
F B "bit_set" 2 252 "void(int16 var,int8 bit)" `217 
F N "bit_set" 2 253 ""
V L "var" 2 253 "int32" `221 
V L "bit" 2 253 "int8" `222 
F B "bit_set" 2 253 "void(int32 var,int8 bit)" `220 
F N "bit_clear" 2 254 ""
V L "var" 2 254 "int8" `224 
V L "bit" 2 254 "int8" `225 
F B "bit_clear" 2 254 "void(int8 var,int8 bit)" `223 
F N "bit_clear" 2 255 ""
V L "var" 2 255 "int16" `227 
V L "bit" 2 255 "int8" `228 
F B "bit_clear" 2 255 "void(int16 var,int8 bit)" `226 
F N "bit_clear" 2 256 ""
V L "var" 2 256 "int32" `230 
V L "bit" 2 256 "int8" `231 
F B "bit_clear" 2 256 "void(int32 var,int8 bit)" `229 
F N "bit_test" 2 257 ""
V L "var" 2 257 "int8" `233 
V L "bit" 2 257 "int8" `234 
F B "bit_test" 2 257 "int8(int8 var,int8 bit)" `232 
F N "bit_test" 2 258 ""
V L "var" 2 258 "int16" `236 
V L "bit" 2 258 "int8" `237 
F B "bit_test" 2 258 "int8(int16 var,int8 bit)" `235 
F N "bit_test" 2 259 ""
V L "var" 2 259 "int32" `239 
V L "bit" 2 259 "int8" `240 
F B "bit_test" 2 259 "int8(int32 var,int8 bit)" `238  "#use delay() Prototypes:"
F N "delay_cycles" 2 262 ""
V L "count" 2 262 "int8" `242 
F B "delay_cycles" 2 262 "void(int8 count)" `241 
F N "delay_ms" 2 263 ""
V L "time" 2 263 "int16" `244 
F B "delay_ms" 2 263 "void(int16 time)" `243 
F N "delay_us" 2 264 ""
V L "time" 2 264 "int16" `246 
F B "delay_us" 2 264 "void(int16 time)" `245  "#use rs232() Prototypes:"
F N "putchar" 2 267 ""
V L "cdata" 2 267 "int8" `248 
F B "putchar" 2 267 "void(int8 cdata)" `247 
F N "putchar" 2 268 ""
V L "cdata" 2 268 "int8" `250 
V L "stream" 2 268 "int8" `251 
F B "putchar" 2 268 "void(int8 cdata,int8 stream)" `249 
F N "puts" 2 269 ""
V L "string" 2 269 "*int8" `253 
F B "puts" 2 269 "void(*int8 string)" `252 
F N "puts" 2 270 ""
V L "string" 2 270 "*int8" `255 
V L "stream" 2 270 "int8" `256 
F B "puts" 2 270 "void(*int8 string,int8 stream)" `254 
F N "getch" 2 271 ""
F B "getch" 2 271 "int8()" `257 
F N "getch" 2 272 ""
V L "stream" 2 272 "int8" `259 
F B "getch" 2 272 "int8(int8 stream)" `258 
F N "gets" 2 273 ""
V L "string" 2 273 "*int8" `261 
F B "gets" 2 273 "void(*int8 string)" `260 
F N "gets" 2 274 ""
V L "string" 2 274 "*int8" `263 
V L "stream" 2 274 "int8" `264 
F B "gets" 2 274 "void(*int8 string,int8 stream)" `262 
F N "kbhit" 2 275 ""
F B "kbhit" 2 275 "int8()" `265 
F N "kbhit" 2 276 ""
V L "stream" 2 276 "int8" `267 
F B "kbhit" 2 276 "int8(int8 stream)" `266 
F N "printf" 2 277 ""
V L "string" 2 277 "*int8" `269 
F B "printf" 2 277 "void(*int8 string,*int8 _VA_LIST)" `268 
F N "fprintf" 2 278 ""
V L "stream" 2 278 "int8" `272 
V L "string" 2 278 "*int8" `273 
F B "fprintf" 2 278 "void(int8 stream,*int8 string,*int8 _VA_LIST)" `271 
F N "putc_send" 2 279 ""
F B "putc_send" 2 279 "void()" `275 
F N "fputc_send" 2 280 ""
V L "stream" 2 280 "int8" `277 
F B "fputc_send" 2 280 "void(int8 stream)" `276 
F N "rcv_buffer_full" 2 281 ""
F B "rcv_buffer_full" 2 281 "int8()" `278 
F N "rcv_buffer_full" 2 282 ""
V L "stream" 2 282 "int8" `280 
F B "rcv_buffer_full" 2 282 "int8(int8 stream)" `279 
F N "rcv_buffer_bytes" 2 283 ""
F B "rcv_buffer_bytes" 2 283 "int16()" `281 
F N "rcv_buffer_bytes" 2 284 ""
V L "stream" 2 284 "int8" `283 
F B "rcv_buffer_bytes" 2 284 "int16(int8 stream)" `282 
F N "tx_buffer_full" 2 285 ""
F B "tx_buffer_full" 2 285 "int8()" `284 
F N "tx_buffer_full" 2 286 ""
V L "stream" 2 286 "int8" `286 
F B "tx_buffer_full" 2 286 "int8(int8 stream)" `285 
F N "tx_buffer_bytes" 2 287 ""
F B "tx_buffer_bytes" 2 287 "int16()" `287 
F N "tx_buffer_bytes" 2 288 ""
V L "stream" 2 288 "int8" `289 
F B "tx_buffer_bytes" 2 288 "int16(int8 stream)" `288 
F N "linbus_header" 2 289 ""
V L "identifier" 2 289 "int8" `291 
F B "linbus_header" 2 289 "int8(int8 identifier)" `290 
F N "linbus_header" 2 290 ""
V L "stream" 2 290 "int8" `293 
V L "identifier" 2 290 "int8" `294 
F B "linbus_header" 2 290 "int8(int8 stream,int8 identifier)" `292 
F N "linbus_header_hit" 2 291 ""
F B "linbus_header_hit" 2 291 "int8()" `295 
F N "linbus_header_hit" 2 292 ""
V L "stream" 2 292 "int8" `297 
F B "linbus_header_hit" 2 292 "int8(int8 stream)" `296 
F N "linbus_header_get" 2 293 ""
F B "linbus_header_get" 2 293 "int8()" `298 
F N "linbus_header_get" 2 294 ""
V L "stream" 2 294 "int8" `300 
F B "linbus_header_get" 2 294 "int8(int8 stream)" `299 
F N "linbus_rx_response" 2 295 ""
V L "DataPtr" 2 295 "*int8" `302 
V L "count" 2 295 "int8" `303 
F B "linbus_rx_response" 2 295 "int8(*int8 DataPtr,int8 count)" `301 
F N "linbus_rx_response" 2 296 ""
V L "stream" 2 296 "int8" `305 
V L "DataPtr" 2 296 "*int8" `306 
V L "count" 2 296 "int8" `307 
F B "linbus_rx_response" 2 296 "int8(int8 stream,*int8 DataPtr,int8 count)" `304 
F N "linbus_tx_response" 2 297 ""
V L "DataPtr" 2 297 "*int8" `309 
V L "count" 2 297 "int8" `310 
F B "linbus_tx_response" 2 297 "void(*int8 DataPtr,int8 count)" `308 
F N "linbus_tx_response" 2 298 ""
V L "stream" 2 298 "int8" `312 
V L "DataPtr" 2 298 "*int8" `313 
V L "count" 2 298 "int8" `314 
F B "linbus_tx_response" 2 298 "void(int8 stream,*int8 DataPtr,int8 count)" `311 
F N "linbus_checksum_type" 2 299 ""
V L "type" 2 299 "int8" `316 
F B "linbus_checksum_type" 2 299 "void(int8 type)" `315 
F N "linbus_checksum_type" 2 300 ""
V L "stream" 2 300 "int8" `318 
V L "type" 2 300 "int8" `319 
F B "linbus_checksum_type" 2 300 "void(int8 stream,int8 type)" `317  "#use i2c() Prototypes:"
F N "i2c_read" 2 303 ""
F B "i2c_read" 2 303 "int8()" `320 
F N "i2c_read" 2 304 ""
V L "ack" 2 304 "int8" `322 
F B "i2c_read" 2 304 "int8(int8 ack)" `321 
F N "i2c_read" 2 305 ""
V L "stream" 2 305 "int8" `324 
V L "ack" 2 305 "int8" `325 
F B "i2c_read" 2 305 "int8(int8 stream,int8 ack)" `323 
F N "i2c_write" 2 306 ""
V L "data" 2 306 "int8" `327 
F B "i2c_write" 2 306 "int8(int8 data)" `326 
F N "i2c_write" 2 307 ""
V L "stream" 2 307 "int8" `329 
V L "data" 2 307 "int8" `330 
F B "i2c_write" 2 307 "int8(int8 stream,int8 data)" `328 
F N "i2c_start" 2 308 ""
F B "i2c_start" 2 308 "void()" `331 
F N "i2c_start" 2 309 ""
V L "stream" 2 309 "int8" `333 
F B "i2c_start" 2 309 "void(int8 stream)" `332 
F N "i2c_start" 2 310 ""
V L "stream" 2 310 "int8" `335 
V L "restart" 2 310 "int8" `336 
F B "i2c_start" 2 310 "void(int8 stream,int8 restart)" `334 
F N "i2c_stop" 2 311 ""
F B "i2c_stop" 2 311 "void()" `337 
F N "i2c_stop" 2 312 ""
V L "stream" 2 312 "int8" `339 
F B "i2c_stop" 2 312 "void(int8 stream)" `338 
F N "i2c_isr_state" 2 313 ""
F B "i2c_isr_state" 2 313 "int8()" `340 
F N "i2c_slaveaddr" 2 314 ""
V L "addr" 2 314 "int8" `342 
F B "i2c_slaveaddr" 2 314 "void(int8 addr)" `341 
F N "i2c_slaveaddr" 2 315 ""
V L "stream" 2 315 "int8" `344 
V L "addr" 2 315 "int8" `345 
F B "i2c_slaveaddr" 2 315 "void(int8 stream,int8 addr)" `343 
F N "i2c_poll" 2 316 ""
F B "i2c_poll" 2 316 "int8()" `346 
F N "i2c_poll" 2 317 ""
V L "stream" 2 317 "int8" `348 
F B "i2c_poll" 2 317 "int8(int8 stream)" `347 
F N "i2c_init" 2 318 ""
V L "baud" 2 318 "int32" `350 
F B "i2c_init" 2 318 "void(int32 baud)" `349 
F N "i2c_init" 2 319 ""
V L "stream" 2 319 "int8" `352 
V L "baud" 2 319 "int32" `353 
F B "i2c_init" 2 319 "void(int8 stream,int32 baud)" `351 
F N "i2c_transfer" 2 320 ""
V L "address" 2 320 "int8" `355 
V L "wData" 2 320 "*int8" `356 
V L "wCount" 2 320 "int8" `357 
F B "i2c_transfer" 2 320 "int8(int8 address,*int8 wData,int8 wCount)" `354 
F N "i2c_transfer" 2 321 ""
V L "address" 2 321 "int8" `359 
V L "wData" 2 321 "*int8" `360 
V L "wCount" 2 321 "int8" `361 
V L "rData" 2 321 "*int8" `362 
V L "rCount" 2 321 "*int8" `363 
F B "i2c_transfer" 2 321 "int8(int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `358 
F N "i2c_transfer" 2 322 ""
V L "stream" 2 322 "int8" `365 
V L "address" 2 322 "int8" `366 
V L "wData" 2 322 "*int8" `367 
V L "wCount" 2 322 "int8" `368 
F B "i2c_transfer" 2 322 "int8(int8 stream,int8 address,*int8 wData,int8 wCount)" `364 
F N "i2c_transfer" 2 323 ""
V L "stream" 2 323 "int8" `370 
V L "address" 2 323 "int8" `371 
V L "wData" 2 323 "*int8" `372 
V L "wCount" 2 323 "int8" `373 
V L "rData" 2 323 "*int8" `374 
V L "rCount" 2 323 "*int8" `375 
F B "i2c_transfer" 2 323 "int8(int8 stream,int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `369 
F N "i2c_transfer_out" 2 324 ""
V L "address" 2 324 "int8" `377 
V L "wData" 2 324 "*int8" `378 
V L "wCount" 2 324 "int8" `379 
F B "i2c_transfer_out" 2 324 "int8(int8 address,*int8 wData,int8 wCount)" `376 
F N "i2c_transfer_out" 2 325 ""
V L "stream" 2 325 "int8" `381 
V L "address" 2 325 "int8" `382 
V L "wData" 2 325 "*int8" `383 
V L "wCount" 2 325 "int8" `384 
F B "i2c_transfer_out" 2 325 "int8(int8 stream,int8 address,*int8 wData,int8 wCount)" `380 
F N "i2c_transfer_in" 2 326 ""
V L "address" 2 326 "int8" `386 
V L "rData" 2 326 "*int8" `387 
V L "rCount" 2 326 "int8" `388 
F B "i2c_transfer_in" 2 326 "int8(int8 address,*int8 rData,int8 rCount)" `385 
F N "i2c_transfer_in" 2 327 ""
V L "stream" 2 327 "int8" `390 
V L "address" 2 327 "int8" `391 
V L "rData" 2 327 "*int8" `392 
V L "rCount" 2 327 "int8" `393 
F B "i2c_transfer_in" 2 327 "int8(int8 stream,int8 address,*int8 rData,int8 rCount)" `389  "#use spi() Prototypes:"
F N "spi_xfer" 2 330 ""
F B "spi_xfer" 2 330 "int8()" `394 
F N "spi_xfer" 2 331 ""
f G "spi_xfer" 2 331 "int16(int8 data)" `395 
F N "spi_xfer" 2 332 ""
f G "spi_xfer" 2 332 "int32(int8 data)" `395 
F N "spi_xfer" 2 333 ""
V L "data" 2 333 "int8" `396 
F B "spi_xfer" 2 333 "int8(int8 data)" `395 
F N "spi_xfer" 2 334 ""
V L "data" 2 334 "int16" `398 
F B "spi_xfer" 2 334 "int16(int16 data)" `397 
F N "spi_xfer" 2 335 ""
V L "data" 2 335 "int32" `400 
F B "spi_xfer" 2 335 "int32(int32 data)" `399 
F N "spi_xfer" 2 336 ""
V L "stream" 2 336 "int8" `402 
V L "data" 2 336 "int8" `403 
F B "spi_xfer" 2 336 "int8(int8 stream,int8 data)" `401 
F N "spi_xfer" 2 337 ""
V L "stream" 2 337 "int8" `405 
V L "data" 2 337 "int16" `406 
F B "spi_xfer" 2 337 "int16(int8 stream,int16 data)" `404 
F N "spi_xfer" 2 338 ""
V L "stream" 2 338 "int8" `408 
V L "data" 2 338 "int32" `409 
F B "spi_xfer" 2 338 "int32(int8 stream,int32 data)" `407 
F N "spi_xfer" 2 339 ""
V L "stream" 2 339 "int8" `411 
V L "data" 2 339 "int8" `412 
V L "bits" 2 339 "int8" `413 
F B "spi_xfer" 2 339 "int8(int8 stream,int8 data,int8 bits)" `410 
F N "spi_xfer" 2 340 ""
V L "stream" 2 340 "int8" `415 
V L "data" 2 340 "int16" `416 
V L "bits" 2 340 "int8" `417 
F B "spi_xfer" 2 340 "int16(int8 stream,int16 data,int8 bits)" `414 
F N "spi_xfer" 2 341 ""
V L "stream" 2 341 "int8" `419 
V L "data" 2 341 "int32" `420 
V L "bits" 2 341 "int8" `421 
F B "spi_xfer" 2 341 "int32(int8 stream,int32 data,int8 bits)" `418 
F N "spi_init" 2 342 ""
V L "baud" 2 342 "int32" `423 
F B "spi_init" 2 342 "void(int32 baud)" `422 
F N "spi_init" 2 343 ""
V L "stream" 2 343 "int8" `425 
V L "baud" 2 343 "int32" `426 
F B "spi_init" 2 343 "void(int8 stream,int32 baud)" `424 
F N "spi_speed" 2 344 ""
V L "baud" 2 344 "int32" `428 
F B "spi_speed" 2 344 "void(int32 baud)" `427 
F N "spi_speed" 2 345 ""
V L "stream" 2 345 "int8" `430 
V L "baud" 2 345 "int32" `431 
F B "spi_speed" 2 345 "void(int8 stream,int32 baud)" `429 
F N "spi_speed" 2 346 ""
V L "stream" 2 346 "int8" `433 
V L "baud" 2 346 "int32" `434 
V L "clock" 2 346 "int32" `435 
F B "spi_speed" 2 346 "void(int8 stream,int32 baud,int32 clock)" `432 
F N "spi_prewrite" 2 347 ""
V L "data" 2 347 "int8" `437 
F B "spi_prewrite" 2 347 "void(int8 data)" `436 
F N "spi_prewrite" 2 348 ""
V L "data" 2 348 "int16" `439 
F B "spi_prewrite" 2 348 "void(int16 data)" `438 
F N "spi_prewrite" 2 349 ""
V L "data" 2 349 "int32" `441 
F B "spi_prewrite" 2 349 "void(int32 data)" `440 
F N "spi_prewrite" 2 350 ""
V L "??65535" 2 350 "int8" `443 
V L "data" 2 350 "int8" `444 
F B "spi_prewrite" 2 350 "void(int8 ,int8 data)" `442 
F N "spi_prewrite" 2 351 ""
V L "??65535" 2 351 "int8" `446 
V L "data" 2 351 "int16" `447 
F B "spi_prewrite" 2 351 "void(int8 ,int16 data)" `445 
F N "spi_prewrite" 2 352 ""
V L "??65535" 2 352 "int8" `449 
V L "data" 2 352 "int32" `450 
F B "spi_prewrite" 2 352 "void(int8 ,int32 data)" `448 
F N "spi_xfer_in" 2 353 ""
F B "spi_xfer_in" 2 353 "int8()" `451 
F N "spi_xfer_in" 2 354 ""
f G "spi_xfer_in" 2 354 "int16(int8 bits)" `452 
F N "spi_xfer_in" 2 355 ""
f G "spi_xfer_in" 2 355 "int32(int8 bits)" `452 
F N "spi_xfer_in" 2 356 ""
V L "bits" 2 356 "int8" `453 
F B "spi_xfer_in" 2 356 "int8(int8 bits)" `452 
F N "spi_xfer_in" 2 357 ""
V L "bits" 2 357 "int8" `455 
f G "spi_xfer_in" 2 357 "int16(int8 bits,int8 bits)" `454 
F N "spi_xfer_in" 2 358 ""
V L "bits" 2 358 "int8" `455 
f G "spi_xfer_in" 2 358 "int32(int8 bits,int8 bits)" `454 
F N "spi_xfer_in" 2 359 ""
V L "stream" 2 359 "int8" `455 
V L "bits" 2 359 "int8" `456 
F B "spi_xfer_in" 2 359 "int8(int8 stream,int8 bits)" `454 
F N "spi_xfer_in" 2 360 ""
V L "stream" 2 360 "int8" `455 
V L "bits" 2 360 "int8" `459 
f G "spi_xfer_in" 2 360 "int16(int8 stream,int8 bits,int16 count)" `457 
F N "spi_xfer_in" 2 361 ""
V L "stream" 2 361 "int8" `455 
V L "bits" 2 361 "int8" `459 
f G "spi_xfer_in" 2 361 "int32(int8 stream,int8 bits,int16 count)" `457 
F N "spi_transfer" 2 362 ""
V L "wData" 2 362 "*int8" `458 
V L "rData" 2 362 "*int8" `459 
V L "count" 2 362 "int16" `460 
F B "spi_transfer" 2 362 "void(*int8 wData,*int8 rData,int16 count)" `457 
F N "spi_transfer" 2 363 ""
V L "stream" 2 363 "int8" `462 
V L "wData" 2 363 "*int8" `463 
V L "rData" 2 363 "*int8" `464 
V L "count" 2 363 "int16" `465 
F B "spi_transfer" 2 363 "void(int8 stream,*int8 wData,*int8 rData,int16 count)" `461 
F N "spi_transfer_write" 2 364 ""
V L "wData" 2 364 "*int8" `467 
V L "count" 2 364 "int16" `468 
F B "spi_transfer_write" 2 364 "void(*int8 wData,int16 count)" `466 
F N "spi_transfer_write" 2 365 ""
V L "stream" 2 365 "int8" `470 
V L "wData" 2 365 "*int8" `471 
V L "count" 2 365 "int16" `472 
F B "spi_transfer_write" 2 365 "void(int8 stream,*int8 wData,int16 count)" `469 
F N "spi_transfer_read" 2 366 ""
V L "rData" 2 366 "*int8" `474 
V L "count" 2 366 "int16" `475 
F B "spi_transfer_read" 2 366 "void(*int8 rData,int16 count)" `473 
F N "spi_transfer_read" 2 367 ""
V L "stream" 2 367 "int8" `477 
V L "rData" 2 367 "*int8" `478 
V L "count" 2 367 "int16" `479 
F B "spi_transfer_read" 2 367 "void(int8 stream,*int8 rData,int16 count)" `476  "#use rtos() Prototypes:"
F N "rtos_run" 2 370 ""
F B "rtos_run" 2 370 "void()" `480 
F N "rtos_yield" 2 371 ""
F B "rtos_yield" 2 371 "void()" `481 
F N "rtos_enable" 2 372 ""
V L "task" 2 372 "int8" `483 
F B "rtos_enable" 2 372 "void(int8 task)" `482 
F N "rtos_disable" 2 373 ""
V L "task" 2 373 "int8" `485 
F B "rtos_disable" 2 373 "void(int8 task)" `484 
F N "rtos_terminate" 2 374 ""
F B "rtos_terminate" 2 374 "void()" `486 
F N "rtos_await" 2 375 ""
V L "flag" 2 375 "int8" `488 
F B "rtos_await" 2 375 "void(int8 flag)" `487 
F N "rtos_wait" 2 376 ""
V L "sem" 2 376 "int8" `490 
F B "rtos_wait" 2 376 "void(int8 sem)" `489 
F N "rtos_signal" 2 377 ""
V L "sem" 2 377 "int8" `492 
F B "rtos_signal" 2 377 "void(int8 sem)" `491 
F N "rtos_msg_send" 2 378 ""
V L "task" 2 378 "int8" `494 
V L "msg" 2 378 "int8" `495 
F B "rtos_msg_send" 2 378 "void(int8 task,int8 msg)" `493 
F N "rtos_msg_read" 2 379 ""
F B "rtos_msg_read" 2 379 "int8()" `496 
F N "rtos_msg_poll" 2 380 ""
F B "rtos_msg_poll" 2 380 "int8()" `497 
F N "rtos_overrun" 2 381 ""
V L "task" 2 381 "int8" `499 
F B "rtos_overrun" 2 381 "int8(int8 task)" `498 
F N "rtos_stats" 2 382 ""
V L "task" 2 382 "int8" `501 
V L "stat" 2 382 "*int8" `502 
F B "rtos_stats" 2 382 "void(int8 task,*int8 stat)" `500  "#use timer() Prototypes:"
F N "get_ticks" 2 385 ""
F B "get_ticks" 2 385 "int8()" `503 
F N "get_ticks" 2 386 ""
f G "get_ticks" 2 386 "int16(int8 stream)" `504 
F N "get_ticks" 2 387 ""
f G "get_ticks" 2 387 "int32(int8 stream)" `504 
F N "get_ticks" 2 388 ""
V L "stream" 2 388 "int8" `505 
F B "get_ticks" 2 388 "int8(int8 stream)" `504 
F N "get_ticks" 2 389 ""
V L "stream" 2 389 "int8" `507 
f G "get_ticks" 2 389 "int16(int8 stream)" `506 
F N "get_ticks" 2 390 ""
V L "stream" 2 390 "int8" `507 
f G "get_ticks" 2 390 "int32(int8 stream)" `506 
F N "set_ticks" 2 391 ""
V L "value" 2 391 "int8" `507 
F B "set_ticks" 2 391 "void(int8 value)" `506 
F N "set_ticks" 2 392 ""
V L "value" 2 392 "int16" `509 
F B "set_ticks" 2 392 "void(int16 value)" `508 
F N "set_ticks" 2 393 ""
V L "value" 2 393 "int32" `511 
F B "set_ticks" 2 393 "void(int32 value)" `510 
F N "set_ticks" 2 394 ""
V L "stream" 2 394 "int8" `513 
V L "value" 2 394 "int8" `514 
F B "set_ticks" 2 394 "void(int8 stream,int8 value)" `512 
F N "set_ticks" 2 395 ""
V L "stream" 2 395 "int8" `516 
V L "value" 2 395 "int16" `517 
F B "set_ticks" 2 395 "void(int8 stream,int16 value)" `515 
F N "set_ticks" 2 396 ""
V L "stream" 2 396 "int8" `519 
V L "value" 2 396 "int32" `520 
F B "set_ticks" 2 396 "void(int8 stream,int32 value)" `518  "#use pwm() Prototypes:"
F N "pwm_on" 2 399 ""
F B "pwm_on" 2 399 "void()" `521 
F N "pwm_on" 2 400 ""
V L "stream" 2 400 "int8" `523 
F B "pwm_on" 2 400 "void(int8 stream)" `522 
F N "pwm_off" 2 401 ""
F B "pwm_off" 2 401 "void()" `524 
F N "pwm_off" 2 402 ""
V L "stream" 2 402 "int8" `526 
F B "pwm_off" 2 402 "void(int8 stream)" `525 
F N "pwm_set_duty" 2 403 ""
V L "duty" 2 403 "int16" `528 
F B "pwm_set_duty" 2 403 "void(int16 duty)" `527 
F N "pwm_set_duty" 2 404 ""
V L "stream" 2 404 "int8" `530 
V L "duty" 2 404 "int16" `531 
F B "pwm_set_duty" 2 404 "void(int8 stream,int16 duty)" `529 
F N "pwm_set_duty_percent" 2 405 ""
V L "percent" 2 405 "int16" `533 
F B "pwm_set_duty_percent" 2 405 "void(int16 percent)" `532 
F N "pwm_set_duty_percent" 2 406 ""
V L "stream" 2 406 "int8" `535 
V L "percent" 2 406 "int16" `536 
F B "pwm_set_duty_percent" 2 406 "void(int8 stream,int16 percent)" `534 
F N "pwm_set_frequency" 2 407 ""
V L "frequency" 2 407 "int32" `538 
F B "pwm_set_frequency" 2 407 "void(int32 frequency)" `537 
F N "pwm_set_frequency" 2 408 ""
V L "stream" 2 408 "int8" `540 
V L "frequency" 2 408 "int32" `541 
F B "pwm_set_frequency" 2 408 "void(int8 stream,int32 frequency)" `539 
F N "pwm_get_duty_period" 2 409 ""
F B "pwm_get_duty_period" 2 409 "int16()" `542 
F N "pwm_get_duty_period" 2 410 ""
V L "stream" 2 410 "int8" `544 
F B "pwm_get_duty_period" 2 410 "int16(int8 stream)" `543  "#use capture() Prototypes:"
F N "get_capture_time" 2 413 ""
F B "get_capture_time" 2 413 "int16()" `545 
F N "get_capture_time" 2 414 ""
V L "stream" 2 414 "int8" `547 
F B "get_capture_time" 2 414 "int16(int8 stream)" `546 
F N "get_capture_event" 2 415 ""
F B "get_capture_event" 2 415 "int8()" `548 
F N "get_capture_event" 2 416 ""
V L "stream" 2 416 "int8" `550 
F B "get_capture_event" 2 416 "int8(int8 stream)" `549  "Enviroment Prototypes:"
c L "get_capture_event" 2 3 2 "FUNCTION"
F N "goto_address" 2 429 ""
V L "address" 2 429 "int16" `552 
F B "goto_address" 2 429 "void(int16 address)" `551 
F N "label_address" 2 430 ""
V L "label" 2 430 "int16" `554 
F B "label_address" 2 430 "int16(int16 label)" `553  "EEPROM Prototypes:"
D G "__EEADDRESS__" 2 437 "unsigned int8"
F N "read_eeprom" 2 440 ""
V L "address" 2 440 "int8" `556 
F B "read_eeprom" 2 440 "int8(int8 address)" `555 
F N "write_eeprom" 2 441 ""
V L "address" 2 441 "int8" `558 
V L "value" 2 441 "int8" `559 
F B "write_eeprom" 2 441 "void(int8 address,int8 value)" `557  "INT"
c L "write_eeprom" 2 3 4 "FUNCTION"
F N "enable_interrupts" 2 448 ""
V L "interrupt" 2 448 "int32" `561 
F B "enable_interrupts" 2 448 "void(int32 interrupt)" `560 
F N "disable_interrupts" 2 449 ""
V L "interrupt" 2 449 "int32" `563 
F B "disable_interrupts" 2 449 "void(int32 interrupt)" `562 
F N "clear_interrupt" 2 450 ""
V L "interrupt" 2 450 "int32" `565 
F B "clear_interrupt" 2 450 "void(int32 interrupt)" `564 
F N "interrupt_active" 2 451 ""
V L "interrupt" 2 451 "int32" `567 
F B "interrupt_active" 2 451 "int8(int32 interrupt)" `566 
F N "interrupt_enabled" 2 452 ""
V L "interrupt" 2 452 "int32" `569 
F B "interrupt_enabled" 2 452 "int8(int32 interrupt)" `568 
F N "ext_int_edge" 2 453 ""
V L "source" 2 453 "int8" `571 
V L "edge" 2 453 "int8" `572 
F B "ext_int_edge" 2 453 "void(int8 source,int8 edge)" `570 
F N "jump_to_isr" 2 454 ""
V L "address" 2 454 "int16" `574 
F B "jump_to_isr" 2 454 "void(int16 address)" `573  "Constants used in EXT_INT_EDGE() are:"
D G "L_TO_H" 2 456 "0x40"
D G "H_TO_L" 2 457 "0"
D G "GLOBAL" 2 459 "0x0BC0"
D G "PERIPH" 2 460 "0x0B40"
D G "INT_RTCC" 2 461 "0x000B20"
D G "INT_EXT_L2H" 2 462 "0x50000B10"
D G "INT_EXT_H2L" 2 463 "0x60000B10"
D G "INT_EXT" 2 464 "0x000B10"
D G "INT_TIMER1" 2 465 "0x008C01"
D G "INT_TIMER0" 2 466 "0x000B20"
D G "INT_EEPROM" 2 467 "0x008C80"
D G "INT_COMP" 2 468 "0x008C08"
D G "INT_RA" 2 469 "0x00FF0B08"
D G "INT_RA0" 2 470 "0x0010B08"
D G "INT_RA1" 2 471 "0x0020B08"
D G "INT_RA2" 2 472 "0x0040B08"
D G "INT_RA3" 2 473 "0x0080B08"
D G "INT_RA4" 2 474 "0x0100B08"
D G "INT_RA5" 2 475 "0x0200B08"
D G "bnt_1" 1 5 "PIN_A0"
D G "bnt_2" 1 6 "PIN_A1"
D G "led_1" 1 7 "PIN_A2"
D G "led_2" 1 8 "PIN_A3"
V G "bien_bnt1" 0 3 "int8" `579 
F N "main" 0 4 ""
F G "main" 0 5 "void()" `580 
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "scanf" 1 255
F B "fscanf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "profileout" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "interrupt_enabled" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "input_a" 0 0
F B "set_tris_a" 1 0
F B "get_tris_a" 0 0
F B "input_change_a" 0 0
F B "port_a_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
